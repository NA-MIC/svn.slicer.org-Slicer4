/*=auto=========================================================================

  Portions (c) Copyright 2005 Brigham and Women's Hospital (BWH) All Rights Reserved.

  See Doc/copyright/copyright.txt
  or http://www.slicer.org/copyright/copyright.txt for details.

  Program:   3D Slicer
  Module:    $RCSfile: vtkCellWallSegmentGUI.h,v $
  Date:      $Date: 2006/03/19 17:12:29 $
  Version:   $Revision: 1.3 $

=========================================================================auto=*/
#ifndef __vtkCellWallSegmentGUI_h
#define __vtkCellWallSegmentGUI_h

#include "vtkSlicerBaseGUIWin32Header.h"
#include "vtkSlicerModuleGUI.h"

#include "vtkMRMLScene.h"
#include "vtkCellWallSegmentLogic.h"

// include the API definition for the segmentation algortihm
#include "vtkCellWallVisSeg.h"
#include "vtkMRMLCellWallSegmentNode.h"


class vtkSlicerSliceWidget;
class vtkKWFrame;
class vtkKWScaleWithEntry;
class vtkKWPushButton;
class vtkKWPushButtonSet;
class vtkSlicerNodeSelectorWidget;
class vtkKWFrameWithLabel;
class vtkKWMenuButtonWithLabel;
class vtkKWFileBrowserDialog;
class vtkSlicerNodeSelectorWidget;

class VTK_CellWallSegment_EXPORT vtkCellWallSegmentGUI : public vtkSlicerModuleGUI
{
  public:
  static vtkCellWallSegmentGUI *New();
  vtkTypeMacro(vtkCellWallSegmentGUI,vtkSlicerModuleGUI);
  void PrintSelf(ostream& os, vtkIndent indent);

  // Description: Get/Set MRML node
  vtkGetObjectMacro (Logic, vtkCellWallSegmentLogic);
  vtkSetObjectMacro (Logic, vtkCellWallSegmentLogic);

  // Description:
  // Set the logic pointer from parent class pointer.
  // Overloads implementation in vtkSlicerModulesGUI
  // to allow loadable modules.
  virtual void SetModuleLogic ( vtkSlicerLogic *logic )
  {
    this->SetLogic(reinterpret_cast<vtkCellWallSegmentLogic*> (logic)); 
  }

  // Description: Get/Set MRML node
  vtkGetObjectMacro (CellWallSegmentNode, vtkMRMLCellWallSegmentNode);

  // Description:
  // Create widgets
  virtual void BuildGUI ( );

  // Description:
  // Add obsereves to GUI widgets
  virtual void AddGUIObservers ( );
  
  // Description:
  // Remove obsereves to GUI widgets
  virtual void RemoveGUIObservers ( );
  
  // Description:
  // Pprocess events generated by Logic
  virtual void ProcessLogicEvents ( vtkObject *caller, unsigned long event,
                                  void *callData ){};

  // Description:
  // Pprocess events generated by GUI widgets
  virtual void ProcessGUIEvents ( vtkObject *caller, unsigned long event,
                                  void *callData );

  // Description:
  // Pprocess events generated by MRML
  virtual void ProcessMRMLEvents ( vtkObject *caller, unsigned long event, 
                                  void *callData);
  
  // catch open file request and open dialog to select filename
  void  FileSelectionCallback();
  
  // Description:
  // Describe behavior at module startup and exit.
  virtual void Enter ( ){};
  virtual void Exit ( ){};

protected:
  vtkCellWallSegmentGUI();
  virtual ~vtkCellWallSegmentGUI();
  vtkCellWallSegmentGUI(const vtkCellWallSegmentGUI&);
  void operator=(const vtkCellWallSegmentGUI&);

  // Description:
  // Updates GUI widgets based on parameters values in MRML node
  void UpdateGUI();

  // Description:
  // Updates parameters values in MRML node based on GUI widgets 
  void UpdateMRML();
  
  // callbacks to handle GUI events registered directly instead of 
  // through UpdateMRML dispatcher
  
  void CellWallSegmentMonoCallback();
  void CellWallSegmentStereoCallback();
  
  vtkKWScaleWithEntry* ConductanceScale;
  vtkKWScaleWithEntry* TimeStepScale;
  vtkKWScaleWithEntry* NumberOfIterationsScale;
  vtkSlicerNodeSelectorWidget* VolumeSelector;
  vtkSlicerNodeSelectorWidget* OutVolumeSelector;
  vtkSlicerNodeSelectorWidget* SegmentedVolumeSelector;
  vtkSlicerNodeSelectorWidget* GADNodeSelector;
  vtkKWPushButton* TwoDButton;
  vtkKWPushButton* ThreeDButton;
  vtkKWPushButton *OpenFileButton;

  vtkCellWallSegmentLogic *Logic;
  vtkMRMLCellWallSegmentNode* CellWallSegmentNode;
  vtkSlicerNodeSelectorWidget* FiducialListSelectorWidget;
  vtkKWFileBrowserDialog* FileBrowserDialog;

};

#endif

