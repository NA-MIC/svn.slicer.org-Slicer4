PROJECT(SlicerGUIPython)

IF(USE_PYTHON AND PYTHON_INCLUDE_PATH)
  SET(LIB_NAME "SlicerGUIPython")
  SET(LIB_SRCS _mytkinter.c _slicerPython.cxx)
  INCLUDE_DIRECTORIES(
    ${PYTHON_INCLUDE_PATH}
    ${VTK_INCLUDE_DIR}
    ${SlicerBase_SOURCE_DIR}
    ${SlicerBase_BINARY_DIR}
  )
  ADD_LIBRARY(${LIB_NAME} ${LIB_SRCS})
  TARGET_LINK_LIBRARIES(${LIB_NAME} SlicerBaseLogic)

  IF(BUILD_SHARED_LIBS)
    INSTALL_TARGETS(${SLICER3_LIB_INSTALL_DIR} ${LIB_NAME})
  ENDIF(BUILD_SHARED_LIBS)

  # SET_SOURCE_FILES_PROPERTIES( _mytkinter.c PROPERTIES WRAP_EXCLUDE TRUE )
  # SET_SOURCE_FILES_PROPERTIES( _slicerPython.c PROPERTIES WRAP_EXCLUDE TRUE )

  SET(dir_list ${dir_list} ${PYTHON_INCLUDE_PATH})
  ADD_DEFINITIONS(-DUSE_PYTHON)
  # Python helper class
  # SET(LIB_SRCS _mytkinter.c ${LIB_SRCS})

  IF (WIN32 AND PYTHON_DEBUG_LIBRARIES)
     TARGET_LINK_LIBRARIES( ${LIB_NAME}
                            debug ${PYTHON_DEBUG_LIBRARIES}
                            optimized ${PYTHON_LIBRARIES})
  ELSE (WIN32 AND PYTHON_DEBUG_LIBRARIES)
     TARGET_LINK_LIBRARIES( ${LIB_NAME} ${PYTHON_LIBRARIES})
  ENDIF (WIN32 AND PYTHON_DEBUG_LIBRARIES)

ENDIF(USE_PYTHON AND PYTHON_INCLUDE_PATH)
