#ifndef __vtkSlicerPermissionPrompterWidget_h
#define __vtkSlicerPermissionPrompterWidget_h

#include "vtkSlicerWidget.h"

#include "vtkKWFrame.h"
#include "vtkKWTopLevel.h"
#include "vtkKWEntry.h"
#include "vtkKWLabel.h"
#include "vtkKWEntryWithLabel.h"
#include "vtkKWCheckButton.h"
#include "vtkKWCheckButtonWithLabel.h"
#include "vtkKWPushButton.h"
#include "vtkKWIcon.h"

//--- MRML storage 
#include "vtkPermissionPrompter.h"

class VTK_SLICER_BASE_GUI_EXPORT vtkSlicerPermissionPrompterWidget : public vtkSlicerWidget
{
 public:
  static vtkSlicerPermissionPrompterWidget *New();
  vtkTypeRevisionMacro ( vtkSlicerPermissionPrompterWidget, vtkSlicerWidget );
  void PrintSelf ( ostream& os, vtkIndent indent );

  vtkGetObjectMacro ( OKButton, vtkKWPushButton );
  vtkGetObjectMacro ( CancelButton, vtkKWPushButton );
  vtkGetObjectMacro (PromptWindow, vtkKWTopLevel);

  // Description:
  // Get the value of the remember check button
  vtkGetObjectMacro ( RememberCheck, vtkKWCheckButtonWithLabel );
  // Description:
  // Get the logo label
  vtkGetObjectMacro ( LogoLabel, vtkKWLabel );
  // Description:
  // Get the icon displayed on the logo label
  vtkGetObjectMacro ( LogoIcon, vtkKWIcon );
  // Description:
  // Get the entry widget for the User name
  vtkGetObjectMacro ( UserNameEntry, vtkKWEntryWithLabel );
  // Description:
  // Get the entry widget for the User password
  vtkGetObjectMacro ( PasswordEntry, vtkKWEntryWithLabel );
  // Description:
  // Get the MRML PermissionPrompter
  vtkGetObjectMacro ( PermissionInfo, vtkPermissionPrompter );
  vtkSetObjectMacro ( PermissionInfo, vtkPermissionPrompter );
    
  // Description:
  // Convenience method to get the user name from the widget
  const char *GetUser();
  // Description:
  // Convenience method to get the password from the widget
  const char *GetPassword();

  // Description:
  // Convenience method: assigns image data to  the Logo icon
  void SetLogoIcon( vtkKWIcon *icon);
  // Description:
  // Processes events generated by all widgets
  void ProcessWidgetEvents( vtkObject *caller, unsigned long event, void *callData);
  // Description:
  // Adds observers to widgets
  void AddWidgetObservers();
  // Description:
  // Removes observers from widgets
  void RemoveWidgetObservers();
  // Description:
  // Creates, configures and packs the widget.
  void CreateWidget();

  // Description:
  // Sets the Title of the dialog window permission prompter
  void SetTitle ( const char *title );
  // Description:
  // Raises the dialog window to prompt for password and user name
  void DisplayPermissionPrompter();
  // Description:
  // Hides the dialog prompter window.
  void HidePermissionPrompter();

  // Description:
  // Describes whether widget has been built yet or not.
  bool Built;



 protected:
  vtkSlicerPermissionPrompterWidget ( );
  virtual ~vtkSlicerPermissionPrompterWidget ( );
  
  vtkKWTopLevel *PromptWindow;
  vtkKWPushButton *OKButton;
  vtkKWPushButton *CancelButton;
  vtkKWCheckButtonWithLabel *RememberCheck;
  vtkKWLabel *LogoLabel;
  vtkKWIcon *LogoIcon;
  vtkKWEntryWithLabel *UserNameEntry;
  vtkKWEntryWithLabel *PasswordEntry;
  vtkPermissionPrompter *PermissionInfo;

 private:
  vtkSlicerPermissionPrompterWidget(const vtkSlicerPermissionPrompterWidget&); // Not implemented
  void operator=(const vtkSlicerPermissionPrompterWidget&); // Not Implemented
};
#endif


